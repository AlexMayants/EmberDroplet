"use strict";function _toConsumableArray(e){if(Array.isArray(e)){for(var t=0,r=Array(e.length);t<e.length;t++)r[t]=e[t];return r}return Array.from(e)}!function(e,t,r){var i,n,s,o,a=t.Mixin,u=t.String,l=t.computed,p=t.get,c=t.set,d=t.run,f={NONE:0,VALID:1,INVALID:2,DELETED:4,UPLOADED:8,FAILED:16},h="droplet/add-files",m=function(e){return"function"==typeof Array.from?Array.from(e):Array.prototype.slice.call(e)},g=t.Service.extend(t.Evented,{publish:function(){this.trigger.apply(this,arguments)},subscribe:function(){this.on.apply(this,arguments)},unsubscribe:function(){this.off.apply(this,arguments)}});t.Application.initializer({name:"load-services",initialize:function(e,t){var r=g.create();t.register("event-bus:current",r,{instantiate:!1}),t.inject("component","DropletEventBus","event-bus:current"),t.inject("controller","DropletEventBus","event-bus:current")}});var y=t.Object.extend({init:function(){this.statusType=f.NONE},getMIMEType:function(){return this.file.type||""},getFileSize:function(){return"undefined"!=typeof this.file.size?this.file.size:1/0},setStatusType:function(e){this.set("statusType",Number(e))}}),v={PUSH:"push",SET:"set"},b={requestMethod:"POST",maximumSize:1/0,maximumValidFiles:1/0,uploadImmediately:!1,includeXFileSize:!0,useArray:!1,mimeTypes:["image/jpeg","image/jpg","image/gif","image/png","image/tiff","image/bmp"],requestHeaders:{},requestPostData:{}},D=u.w("files.length files.@each.statusType"),A={URL_REQUIRED:"Droplet: You must specify the URL parameter when constructing your component."};e.Droplet=a.create({url:function(){throw new Error(A.URL_REQUIRED)},model:y,options:{},hooks:{},files:[],statusTypes:f,init:function(){var e=this;c(this,"files",[]),c(this,"hooks",{}),Object.keys(b).forEach(function(t){c(e,"options."+t,b[t])}),c(this,"options.requestHeaders",{}),c(this,"options.requestPostData",{}),this.DropletEventBus&&this.DropletEventBus.subscribe(h,this,function(){for(var t=arguments.length,r=Array(t),i=0;t>i;i++)r[i]=arguments[i];e.send.apply(e,["prepareFiles"].concat(r))}),this._super()},willDestroy:function(){this._super();var e=this.get("lastRequest");e&&(delete e.upload.onprogress,delete e.upload.onload,delete e.upload.onerror,this.send("abortUpload"))},invokeHook:function(e){for(var t=p(this,"hooks")[e]||function(){},r=arguments.length,i=Array(r>1?r-1:0),n=1;r>n;n++)i[n-1]=arguments[n];t.apply(void 0,i)},uploadStatus:l(function(){return{uploading:!1,percentComplete:0,error:!1}}),validFiles:(i=l(function(){return this.getFiles(f.VALID)})).property.apply(i,_toConsumableArray(D)),invalidFiles:(n=l(function(){return this.getFiles(f.INVALID)})).property.apply(n,_toConsumableArray(D)),uploadedFiles:(s=l(function(){return this.getFiles(f.UPLOADED)})).property.apply(s,_toConsumableArray(D)),deletedFiles:(o=l(function(){return this.getFiles(f.DELETED)})).property.apply(o,_toConsumableArray(D)),requestSize:l(function(){return p(this,"validFiles").reduce(function(e,t){return e+t.getFileSize()},0)}).property(D),getFiles:function(e){return e?this.files.filter(function(t){return t.statusType&e}):this.files},isValid:function F(e){var r=this;if(!(e instanceof t.Object))return!1;var i=function(e){return function(){var t=r.get("options.mimeTypes").some(function(e){return e instanceof RegExp}),i=p(r,"options.mimeTypes");return t?i.some(function(t){var r=t===e,i=!!e.match(t);return r||i}):!!~i.indexOf(e)}},n=function(e){return function(){return e<=Number(p(r,"options.maximumSize"))}},s=function(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];return function(e){return t.reverse().every(function(t){return t(e)})}},F=s(i(e.getMIMEType()),n(e.getFileSize()));return F(e)},getFormData:function(){var t=new e.FormData,r=this.get("options.useArray")?"file[]":"file",i=this.get("options.requestPostData"),n=p(this,"validFiles").map(function(e){return e.file});return n.forEach(function(e){t.append(r,e)}),Object.keys(i).forEach(function(e){t.append(e,i[e])}),t},addProgressListener:function(e){var t=this;e.addEventListener("progress",function(e){if(e.lengthComputable){var r=e.loaded/p(t,"requestSize")*100;c(t,"uploadStatus.percentComplete",Math.round(r))}})},getRequest:function(){var e=this,r=function(e){return"function"==typeof e},i=r(p(this,"url"))?p(this,"url").apply(this):p(this,"url"),n=p(this,"options.requestMethod")||"POST",s=this.getFormData(),o=this.get("options.requestHeaders");p(this,"options.includeXFileSize")&&(o["X-File-Size"]=this.get("requestSize"));var a=t.$.ajax({url:i,method:n,headers:o,data:s,processData:!1,contentType:!1,xhr:function u(){var u=t.$.ajaxSettings.xhr();return e.addProgressListener(u.upload),c(e,"lastRequest",u),u}});return c(this,"lastResolver",a),a},actions:{uploadFiles:function(){var e=this,r=p(this,"files").filter(function(e){return e.statusType&f.VALID}),i=this.getRequest();c(this,"abortedUpload",!1),c(this,"uploadStatus.percentComplete",0),c(this,"uploadStatus.uploading",!0),c(this,"uploadStatus.error",!1);var n=function(t,n){e.invokeHook("promiseResolver",t,n,r),i.done(t).fail(n)},s=function(t){e.invokeHook.apply(e,["didUpload"].concat(_toConsumableArray(t.files))),r.map(function(e){return e.setStatusType(f.UPLOADED)})},o=function(t){var r=t.request,i=t.textStatus,n=t.errorThrown;p(e,"abortedUpload")!==!0&&c(e,"uploadStatus.error",{request:r,textStatus:i,errorThrown:n})},a=function(){c(e,"uploadStatus.uploading",!1),e.invokeHook("didComplete")};return new t.RSVP.Promise(n).then(s,o)["finally"](a)},abortUpload:function(){var e=p(this,"lastResolver");e&&p(this,"uploadStatus.uploading")&&(c(this,"abortedUpload",!0),e.abort(),c(this,"uploadStatus.uploading",!1))},mimeTypes:function(e){var t=arguments.length<=1||void 0===arguments[1]?v.PUSH:arguments[1];t===v.SET&&c(this,"options.mimeTypes",[]),e=Array.isArray(e)?e:[e];var r=[].concat(_toConsumableArray(p(this,"options.mimeTypes")),_toConsumableArray(e));c(this,"options.mimeTypes",r)},addFiles:function(){for(var e=this,r=arguments.length,i=Array(r),n=0;r>n;n++)i[n]=arguments[n];var s=i.map(function(r){var i=e.get("validFiles.length")===e.get("options.maximumValidFiles");if(r instanceof t.Object){var n=function(){var t=e.isValid(r)&&!i?f.VALID:f.INVALID;return d(function(){return r.setStatusType(t)}),p(e,"files").pushObject(r),{v:r}}();if("object"==typeof n)return n.v}}).filter(function(e){return"undefined"!=typeof e});s.length&&this.invokeHook.apply(this,["didAdd"].concat(_toConsumableArray(s))),this.get("options.uploadImmediately")&&this.send.apply(this,["uploadFiles"].concat(_toConsumableArray(s)))},prepareFiles:function(){for(var e=arguments.length,t=Array(e),r=0;e>r;r++)t[r]=arguments[r];t=m(t);var i=t.reduce(function(e,t){var r=y.create({file:t});return e.push(r),e},[]);return this.send.apply(this,["addFiles"].concat(_toConsumableArray(i))),i},deleteFiles:function(){for(var e=this,t=arguments.length,r=Array(t),i=0;t>i;i++)r[i]=arguments[i];var n=r.map(function(t){var r=!!~p(e,"files").indexOf(t);return r?(t.setStatusType(f.DELETED),t):void 0}).filter(function(e){return"undefined"!=typeof e});n.length&&this.invokeHook.apply(this,["didDelete"].concat(_toConsumableArray(n)))},clearFiles:function(){var e=this,t=[].concat(_toConsumableArray(this.get("validFiles")),_toConsumableArray(this.get("invalidFiles")));t.forEach(function(t){return e.send("deleteFiles",t)})}}});var E=function(e){e.preventDefault(),e.stopPropagation()};e.Droplet.Area=a.create({classNames:["droppable"],drop:function(e){return E(e),this.handleFiles(e.dataTransfer.files)},handleFiles:function(e){var t;return this.DropletEventBus&&(t=this.DropletEventBus).publish.apply(t,[h].concat(_toConsumableArray(m(e)))),e},dragEnter:E,dragOver:E,dragLeave:E}),e.Droplet.Preview=a.create({tagName:"img",attributeBindings:["src"],reader:r,image:{file:{type:""}},isImage:function(e){return!!e.type.match(/^image\//i)},didInsertElement:function(){var e=this,t=this.get("reader"),r=new t,i=p(this,"image.file");return this.isImage(i)?(r.addEventListener("load",d.bind(this,function(t){e.get("isDestroyed")!==!0&&c(e,"src",t.target.result)})),void r.readAsDataURL(i)):void this.destroy()}}),e.Droplet.MultipleInput=a.create({tagName:"input",classNames:"files",attributeBindings:["disabled","name","type","multiple"],type:"file",multiple:"multiple",change:function(){var e=this.get("element").files;this.handleFiles(e)},handleFiles:function(e){var t;this.DropletEventBus&&(t=this.DropletEventBus).publish.apply(t,[h].concat(_toConsumableArray(m(e))))}}),e.Droplet.SingleInput=a.create(e.Droplet.MultipleInput,{multiple:!1})}(window,window.Ember,window.FileReader);